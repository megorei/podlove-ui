name: Release
on:
  push:
    tags:
      - '*'

jobs:
  bootstrap:
    runs-on: ubuntu-latest
    outputs:
      pnpm_store_path: ${{ steps.pnpm.outputs.pnpm_store_path }}
      pnpm_hash_key: ${{ steps.pnpm.outputs.pnpm_hash_key }}
      pnpm_restore_key: ${{ steps.pnpm.outputs.pnpm_restore_key }}
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - name: pnpm env
        id: pnpm
        shell: bash
        run: |
          echo "pnpm_store_path=$(devbox run pnpm store path --silent)" >> "$GITHUB_OUTPUT"
          echo "pnpm_hash_key=${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}" >> "$GITHUB_OUTPUT"
          echo "pnpm_restore_key=${{ runner.os }}-pnpm-store-" >> "$GITHUB_OUTPUT"
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ steps.pnpm.outputs.pnpm_store_path }}
          key: ${{ steps.pnpm.outputs.pnpm_hash_key }}
          restore-keys: ${{ steps.pnpm.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --frozen-lockfile

  apps_player:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ needs.bootstrap.outputs.pnpm_store_path }}
          key: ${{ needs.bootstrap.outputs.pnpm_hash_key }}
          restore-keys: ${{ needs.bootstrap.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --offline
      - name: build
        run: devbox run pnpm run build --scope @podlove/player
      - name: set config
        run: devbox run pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: publish
        run: devbox run pnpm publish --no-git-checks --access public --filter @podlove/player

  packages_components:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ needs.bootstrap.outputs.pnpm_store_path }}
          key: ${{ needs.bootstrap.outputs.pnpm_hash_key }}
          restore-keys: ${{ needs.bootstrap.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --offline
      - name: build
        run: devbox run pnpm run build --scope @podlove/components
      - name: set config
        run: devbox run pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: publish
        run: devbox run pnpm publish --no-git-checks --access public --filter @podlove/components

  packages_player-actions:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ needs.bootstrap.outputs.pnpm_store_path }}
          key: ${{ needs.bootstrap.outputs.pnpm_hash_key }}
          restore-keys: ${{ needs.bootstrap.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --offline
      - name: build
        run: devbox run pnpm run build --scope @podlove/player-actions
      - name: set config
        run: devbox run pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: publish
        run: devbox run pnpm publish --no-git-checks --access public --filter @podlove/player-actions

  packages_player-state:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ needs.bootstrap.outputs.pnpm_store_path }}
          key: ${{ needs.bootstrap.outputs.pnpm_hash_key }}
          restore-keys: ${{ needs.bootstrap.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --offline
      - name: build
        run: devbox run pnpm run build --scope @podlove/player-state
      - name: set config
        run: devbox run pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: publish
        run: devbox run pnpm publish --no-git-checks --access public --filter @podlove/player-state

  packages_player-config:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ needs.bootstrap.outputs.pnpm_store_path }}
          key: ${{ needs.bootstrap.outputs.pnpm_hash_key }}
          restore-keys: ${{ needs.bootstrap.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --offline
      - name: build
        run: devbox run pnpm run build --scope @podlove/player-config
      - name: set config
        run: devbox run pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: publish
        run: devbox run pnpm publish --no-git-checks --access public --filter @podlove/player-config

  packages_utils:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ needs.bootstrap.outputs.pnpm_store_path }}
          key: ${{ needs.bootstrap.outputs.pnpm_hash_key }}
          restore-keys: ${{ needs.bootstrap.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --offline
      - name: build
        run: devbox run pnpm run build --scope @podlove/utils
      - name: set config
        run: devbox run pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: publish
        run: devbox run pnpm publish --no-git-checks --access public --filter @podlove/utils

  packages_clients:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ needs.bootstrap.outputs.pnpm_store_path }}
          key: ${{ needs.bootstrap.outputs.pnpm_hash_key }}
          restore-keys: ${{ needs.bootstrap.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --offline
      - name: build
        run: devbox run pnpm run build --scope @podlove/clients
      - name: set config
        run: devbox run pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: publish
        run: devbox run pnpm publish --no-git-checks --access public --filter @podlove/clients

  packages_button-actions:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ needs.bootstrap.outputs.pnpm_store_path }}
          key: ${{ needs.bootstrap.outputs.pnpm_hash_key }}
          restore-keys: ${{ needs.bootstrap.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --offline
      - name: build
        run: devbox run pnpm run build --scope @podlove/button-actions
      - name: set config
        run: devbox run pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: publish
        run: devbox run pnpm publish --no-git-checks --access public --filter @podlove/button-actions

  packages_media-backend:
    runs-on: ubuntu-latest
    needs: bootstrap
    steps:
      - uses: actions/checkout@v3
      - name: install
        uses: jetpack-io/devbox-install-action@v0.7.0
        with:
          enable-cache: true
      - uses: actions/cache@v3
        name: setup pnpm cache
        with:
          path: ${{ needs.bootstrap.outputs.pnpm_store_path }}
          key: ${{ needs.bootstrap.outputs.pnpm_hash_key }}
          restore-keys: ${{ needs.bootstrap.outputs.pnpm_restore_key }}
      - name: install
        run: devbox run pnpm install --offline
      - name: build
        run: devbox run pnpm run build --scope @podlove/media-backend
      - name: set config
        run: devbox run pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: publish
        run: devbox run pnpm publish --no-git-checks --access public --filter @podlove/media-backend
